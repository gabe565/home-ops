# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.1.0/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: healthchecks
  namespace: healthchecks
spec:
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
      healthchecks:
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/linuxserver/healthchecks
              tag: version-v3.3@sha256:c3372a56bc12ac3d06c60002b644c0af78bfe83fb9ccc8929c3ec5ffb848b7cf
              pullPolicy: IfNotPresent
            env:
              TZ: America/Chicago
              SITE_NAME: Cook Healthchecks
              SITE_ROOT: https://${app_url}
              SITE_LOGO_URL: ${logo_url}
              DEBUG: "False"
              SECRET_KEY: ${secret_key}
              EMAIL_HOST: ${smtp_hostname}
              EMAIL_HOST_USER: ${smtp_username}
              EMAIL_HOST_PASSWORD: ${smtp_password}
              EMAIL_PORT: "587"
              EMAIL_USE_TLS: "True"
              DEFAULT_FROM_EMAIL: ${smtp_username}
              TELEGRAM_TOKEN: ${telegram_token}
              TELEGRAM_BOT_NAME: Healthchecks
              REMOTE_USER_HEADER: HTTP_X_AUTHENTIK_EMAIL
              INTEGRATIONS_ALLOW_PRIVATE_IPS: "True"

              DB: postgres
              DB_HOST: postgresql-rw
              DB_NAME: healthchecks
              DB_USER: healthchecks
              DB_PASSWORD:
                secretKeyRef:
                  name: postgresql-app
                  key: password
        pod:
          terminationGracePeriodSeconds: 1
          labels:
            policy.gabe565.com/egress-namespace: "true"
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-ingress: "true"
            policy.gabe565.com/ingress-prometheus: "true"

    service:
      healthchecks:
        controller: healthchecks
        ports:
          http:
            port: 8000

    ingress:
      healthchecks:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-gabernetes.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
            /outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: ${app_url}
            paths:
              - path: /
                service:
                  identifier: healthchecks
                  port: http
        tls:
          - secretName: ${certificate_name}
            hosts:
              - ${app_url}

    secrets:
      ping-key:
        enabled: true
        annotations:
          reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
          reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
        stringData:
          key: ${ping_key}

    serviceMonitor:
      healthchecks:
        enabled: true
        serviceName: healthchecks
        endpoints:
          - port: http
            scheme: http
            path: ${service_monitor_path}
