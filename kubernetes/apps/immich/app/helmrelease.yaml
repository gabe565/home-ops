apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: immich
  namespace: immich
spec:
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    defaultPodOptions:
      enableServiceLinks: false

    controllers:
      main:
        enabled: false
      server:
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.94.1@sha256:c7b80752d48464dea1c4495ff810365a0809d89c2ac219547d3c1aed81c6411f
              pullPolicy: IfNotPresent
            command: [./start-server.sh]
            env: &env
              TZ: America/Chicago
              DB_HOSTNAME: postgresql-rw
              DB_DATABASE_NAME: immich
              DB_USERNAME: immich
              DB_PASSWORD:
                secretKeyRef:
                  name: postgresql-app
                  key: password
              REDIS_HOSTNAME: redis-master
              REDIS_PASSWORD:
                secretKeyRef:
                  name: redis
                  key: redis-password
        pod:
          labels:
            policy.gabe565.com/egress-namespace: "true"
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-ingress: "true"
            policy.gabe565.com/ingress-namespace: "true"
      microservices:
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.94.1@sha256:c7b80752d48464dea1c4495ff810365a0809d89c2ac219547d3c1aed81c6411f
              pullPolicy: IfNotPresent
            command: [./start-microservices.sh]
            env: *env
            resources:
              requests:
                gpu.intel.com/i915: 1
              limits:
                gpu.intel.com/i915: 1
        pod:
          labels:
            policy.gabe565.com/egress-namespace: "true"
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-namespace: "true"
      machine-learning:
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.94.1@sha256:a3c612c548d5f547a31d001d97f661d7acd4a0ae354de76a70e45162d2b81014
              pullPolicy: IfNotPresent
        pod:
          labels:
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-namespace: "true"

    persistence:
      upload:
        enabled: true
        storageClass: nfs-client
        accessMode: ReadWriteMany
        size: 32Gi
        retain: true
        advancedMounts:
          server:
            main:
              - path: /usr/src/app/upload
          microservices:
            main:
              - path: /usr/src/app/upload
      model-cache:
        enabled: true
        storageClass: longhorn-ssd
        accessMode: ReadWriteOnce
        size: 8Gi
        retain: true
        advancedMounts:
          machine-learning:
            main:
              - path: /cache

    service:
      main:
        enabled: false
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003
      server:
        enabled: true
        controller: server
        ports:
          http:
            port: 3001

    ingress:
      main:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
        hosts:
          - host: ${app_url}
            paths:
              - path: /
                service:
                  name: server
        tls:
          - secretName: ${certificate_name}
            hosts:
              - ${app_url}
