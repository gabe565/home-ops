apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: tandoor
  namespace: tandoor
spec:
  chart:
    spec:
      chart: app-template
      version: 3.0.3
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
      main:
        strategy: RollingUpdate
        containers:
          main:
            image:
              repository: ghcr.io/tandoorrecipes/recipes
              tag: 1.5.14@sha256:0a8356025307642b3803cde0793d59467bb6af07ee685527e28f215868b30537

            env:
              TZ: America/Chicago
              SECRET_KEY: ${secret_key}
              GUNICORN_WORKERS: "1"
              FRACTION_PREF_DEFAULT: "1"
              DEBUG: "0"

              DB_ENGINE: django.db.backends.postgresql
              POSTGRES_HOST: postgresql-rw
              POSTGRES_DB: tandoor
              POSTGRES_USER: tandoor
              POSTGRES_PASSWORD:
                secretKeyRef:
                  name: postgresql-app
                  key: password

              S3_ENDPOINT_URL: ${s3_url}
              S3_ACCESS_KEY: ${s3_access_key}
              S3_SECRET_ACCESS_KEY: ${s3_secret_key}
              S3_BUCKET_NAME: tandoor
              S3_REGION_NAME: us-central-1

              OAUTH_ID: authentik
              OAUTH_NAME: Authentik
              OAUTH_SERVER_URL: https://${oauth_host}/application/o/tandoor-recipes/.well-known/openid-configuration
              OAUTH_CLIENT_ID: ${oauth_client_id}
              OAUTH_CLIENT_SECRET: ${oauth_client_secret}
              SOCIAL_PROVIDERS: allauth.socialaccount.providers.openid_connect
              # language=json
              SOCIALACCOUNT_PROVIDERS: |-
                {"openid_connect":{"SERVERS":[{"id": "$(OAUTH_ID)","name": "$(OAUTH_NAME)","server_url": "$(OAUTH_SERVER_URL)","token_auth_method": "client_secret_basic","APP": {"client_id": "$(OAUTH_CLIENT_ID)","secret": "$(OAUTH_CLIENT_SECRET)"}}]}}

        pod:
          enableServiceLinks: false
          labels:
            policy.gabe565.com/egress-namespace: "true"
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-ingress: "true"
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
            fsGroup: 65534

    service:
      main:
        controller: main
        ports:
          http:
            port: 8080

    persistence:
      static:
        enabled: true
        type: emptyDir
        size: 512Mi
        globalMounts:
          - path: /opt/recipes/staticfiles
            subPath: staticfiles
          - path: /opt/recipes/cookbook/static/django_js_reverse
            subPath: django_js_reverse

    ingress:
      main:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
        hosts:
          - host: ${app_url}
            paths:
              - path: /
                service: &svc
                  identifier: main
                  port: http
        tls: &tls
          - secretName: ${certificate_name}
            hosts:
              - ${app_url}
              - www.${app_url}
      redirect-login:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/temporal-redirect: https://${app_url}/accounts/oidc/authentik/login
        hosts:
          - host: ${app_url}
            paths:
              - path: /accounts/login
                service: *svc
        tls: *tls
