apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: adguard-home
  namespace: adguard-home
spec:
  chart:
    spec:
      chart: app-template
      version: 3.0.3
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
      main:
        type: statefulset
        replicas: 2
        containers:
          main:
            image:
              repository: adguard/adguardhome
              tag: v0.107.45@sha256:52a9c2e7b4c56e5f08e1b2f3196d500c931adadc8917712ff9ef9ea922c030fe
              pullPolicy: IfNotPresent
            env:
              TZ: America/Chicago
            probes:
              liveness: &probe
                type: HTTP
                path: /login.html
              readiness: *probe
              startup: *probe
        pod:
          priorityClassName: system-cluster-critical
          labels:
            policy.gabe565.com/egress-namespace: "true"
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-ingress: "true"
            policy.gabe565.com/ingress-namespace: "true"
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  podAffinityTerm:
                    topologyKey: kubernetes.io/hostname
                    labelSelector:
                      matchLabels:
                        app.kubernetes.io/name: adguard-home
                        app.kubernetes.io/component: main
        statefulset:
          volumeClaimTemplates:
            - name: data
              storageClass: longhorn-ssd
              accessMode: ReadWriteOnce
              size: 2Gi
              globalMounts:
                - path: /opt/adguardhome/conf
                  subPath: conf
                - path: /opt/adguardhome/work
                  subPath: work
      sync:
        containers:
          main:
            image:
              repository: ghcr.io/bakito/adguardhome-sync
              tag: alpine-v0.6.5@sha256:69d5be341361c40d8c67ccaa4ddbd474a26186362b914f4d7800046f41b79a0b
              pullPolicy: IfNotPresent
            args: [run]
            env:
              ORIGIN_URL: http://adguard-home-origin:3000
              ORIGIN_WEB_URL: https://${app_url}
              ORIGIN_USERNAME: ${sync_username}
              ORIGIN_PASSWORD: ${sync_password}
              REPLICA_URL: http://adguard-home-replica:3000
              REPLICA_WEB_URL: https://replica.${app_url}
              REPLICA_USERNAME: ${sync_username}
              REPLICA_PASSWORD: ${sync_password}
              REPLICA_AUTO_SETUP: "true"
              CRON: "*/10 * * * *"
        pod:
          labels:
            policy.gabe565.com/egress-namespace: "true"

    service:
      main:
        ports:
          http:
            port: 3000
      sync:
        controller: sync
        ports:
          http:
            port: 8080
      origin: &origin-http
        controller: main
        extraSelectorLabels:
          apps.kubernetes.io/pod-index: "0"
        ports:
          http:
            port: 3000
      origin-dns: &origin-dns
        controller: main
        extraSelectorLabels:
          apps.kubernetes.io/pod-index: "0"
        type: LoadBalancer
        externalTrafficPolicy: Local
        loadBalancerIP: 192.168.1.221
        ports:
          dns-tcp:
            port: 53
            protocol: TCP
          dns-udp:
            port: 53
            protocol: UDP

      replica:
        <<: *origin-http
        extraSelectorLabels:
          apps.kubernetes.io/pod-index: "1"
      replica-dns:
        <<: *origin-dns
        extraSelectorLabels:
          apps.kubernetes.io/pod-index: "1"
        loadBalancerIP: 192.168.1.222

    ingress:
      origin: &ingress
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-gabernetes.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
            /outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,Authorization
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: ${app_url}
            paths:
              - path: /
                service:
                  name: origin
        tls:
          - secretName: ${certificate_name}
            hosts:
              - ${app_url}
              - replica.${app_url}
      replica:
        <<: *ingress
        hosts:
          - host: replica.${app_url}
            paths:
              - path: /
                service:
                  name: replica
