apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik
  namespace: authentik
spec:
  chart:
    spec:
      chart: authentik
      version: 2024.4.1
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: authentik
        name: authentik
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    global:
      priorityClassName: system-cluster-critical

      deploymentAnnotations:
        configmap.reloader.stakater.com/reload: authentik-custom-assets
        secret.reloader.stakater.com/reload: authentik-s3-envs,authentik-geoip

      podLabels:
        policy.gabe565.com/egress-kube-dns: "true"
        policy.gabe565.com/egress-kubeapi: "true"
        policy.gabe565.com/egress-namespace: "true"
        policy.gabe565.com/egress-world: "true"
        policy.gabe565.com/ingress-prometheus: "true"
        policy.gabe565.com/ingress-ingress: "true"
        policy.gabe565.com/egress-geoip: "true"

      env:
        - name: AUTHENTIK_DISABLE_UPDATE_CHECK
          value: "true"
        - name: AUTHENTIK_DISABLE_STARTUP_ANALYTICS
          value: "true"
        - name: AUTHENTIK_POSTGRESQL__PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-app
              key: password
        - name: AUTHENTIK_REDIS__PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis
              key: redis-password
      envFrom:
        - secretRef:
            name: authentik-s3-envs

      volumes:
        - name: public
          emptyDir: {}
        - name: tmp
          emptyDir: {}
      volumeMounts:
        - name: public
          mountPath: /media/public

    authentik:
      # This sends anonymous usage-data, stack traces on errors and
      # performance data to sentry.beryju.org, and is fully opt-in
      error_reporting:
        enabled: false

      secret_key: ${authentik_secret_key}

      postgresql:
        host: postgresql-rw
        name: authentik
        user: authentik

      redis:
        host: redis-master

      email:
        host: ${email_host}
        port: 587
        use_tls: true
        username: ${email_username}
        password: ${email_password}
        from: ${email_from}

      log_level: warning

    geoip:
      enabled: true
      accountId: "1"
      licenseKey: stub
      env:
        - name: GEOIPUPDATE_HOST
          value: ${geoip_host}
      containerSecurityContext:
        readOnlyRootFilesystem: true
      volumeMounts:
        - name: tmp
          mountPath: /tmp

    server:
      ingress:
        enabled: true
        hosts:
          - ${app_url}
        tls:
          - secretName: ${certificate_name}
            hosts:
              - ${app_url}

      volumes:
        - name: custom-assets
          configMap:
            name: authentik-custom-assets
      volumeMounts:
        - name: custom-assets
          mountPath: /web/dist/custom.css
          subPath: custom.css
        - name: custom-assets
          mountPath: /web/authentik/sources/google.svg
          subPath: google.svg
        - name: custom-assets
          mountPath: /web/authentik/sources/plex.svg
          subPath: plex.svg

      containerSecurityContext:
        readOnlyRootFilesystem: true

      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          interval: 1m

    worker:
      containerSecurityContext:
        readOnlyRootFilesystem: true
