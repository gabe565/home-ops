# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.1/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: homepage
  namespace: homepage
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
      homepage:
        annotations:
          configmap.reloader.stakater.com/reload: homepage-config
          secret.reloader.stakater.com/reload: homepage-env
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/gethomepage/homepage
              tag: v0.10.9@sha256:b6d732817572f9af99ec168b10641b8f7820f30cfa5a5cc5c68f1e291804bec8
              pullPolicy: IfNotPresent
            env:
              TZ: America/Chicago
            envFrom:
              - secretRef:
                  name: homepage-env
            probes:
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              readOnlyRootFilesystem: true
        pod:
          labels:
            policy.gabe565.com/egress-adguard-api: "true"
            policy.gabe565.com/egress-authentik: "true"
            policy.gabe565.com/egress-healthchecks: "true"
            policy.gabe565.com/egress-home-assistant: "true"
            policy.gabe565.com/egress-immich: "true"
            policy.gabe565.com/egress-kubeapi: "true"
            policy.gabe565.com/egress-lidarr: "true"
            policy.gabe565.com/egress-miniflux: "true"
            policy.gabe565.com/egress-nightscout: "true"
            policy.gabe565.com/egress-overseerr: "true"
            policy.gabe565.com/egress-plex: "true"
            policy.gabe565.com/egress-prowlarr: "true"
            policy.gabe565.com/egress-qbittorrent: "true"
            policy.gabe565.com/egress-radarr: "true"
            policy.gabe565.com/egress-shlink: "true"
            policy.gabe565.com/egress-sonarr: "true"
            policy.gabe565.com/egress-tandoor: "true"
            policy.gabe565.com/egress-tautulli: "true"
            policy.gabe565.com/egress-uptime-kuma: "true"
            policy.gabe565.com/egress-world-with-lan: "true"
            policy.gabe565.com/ingress-ingress: "true"

    service:
      homepage:
        controller: homepage
        ports:
          http:
            port: 3000

    persistence:
      config:
        enabled: true
        type: configMap
        name: homepage-config
        globalMounts:
          - path: /app/config
      logs:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /app/config/logs

    ingress:
      homepage:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-gabernetes.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://$host/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
          nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
          nginx.ingress.kubernetes.io/satisfy: any
          nginx.ingress.kubernetes.io/whitelist-source-range: 192.168.1.0/24
        hosts:
          - host: ${app_url}
            paths:
              - path: /
                service:
                  identifier: homepage
                  port: http
        tls:
          - secretName: ${certificate_name}
            hosts:
              - ${app_url}
              - www.${app_url}

    serviceAccount:
      create: true

    rbac:
      roles:
        homepage:
          enabled: true
          type: ClusterRole
          rules:
            - apiGroups: [""]
              verbs: [get, list]
              resources: [namespaces, pods, nodes]
            - apiGroups: [extensions, networking.k8s.io]
              verbs: [get, list]
              resources: [ingresses]
            - apiGroups: [metrics.k8s.io]
              verbs: [get, list]
              resources: [nodes, pods]
      bindings:
        homepage:
          enabled: true
          type: ClusterRoleBinding
          roleRef:
            identifier: homepage
          subjects:
            - identifier: default
