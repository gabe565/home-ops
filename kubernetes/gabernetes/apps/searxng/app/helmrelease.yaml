apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: searxng
  namespace: searxng
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
      searxng:
        annotations:
          configmap.reloader.stakater.com/reload: searxng-config
        strategy: RollingUpdate
        initContainers:
          config-envsubst:
            image:
              repository: ghcr.io/mikefarah/yq
              tag: 4.45.4@sha256:7cf28e5d67782f4b274a93a7bc54a840b553447a0807efd843d069f46bff718c
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: config-envs
            command:
              - sh
              - -c
              - exec yq '(.. | select(tag == "!!str")) |= envsubst' /config/settings.yml > /etc/searxng/settings.yml
        containers:
          app:
            image:
              repository: searxng/searxng
              tag: latest
            env:
              TZ: America/Chicago
              SEARXNG_SECRET: ${searxng_secret}
              SEARXNG_URL: https://${app_url}
              UWSGI_WORKERS: "1"
            probes:
              liveness: &probe
                enabled: true
                type: HTTP
                path: /healthz
              readiness: *probe
              startup:
                <<: *probe
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: [ALL]}
        pod:
          labels:
            policy.gabe565.com/egress-namespace: "true"
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-nginx: "true"
            valkey-client: "true"
          securityContext:
            runAsNonRoot: true
            runAsUser: 977
            runAsGroup: 977
            fsGroup: 977
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: {type: RuntimeDefault}

    service:
      searxng:
        controller: searxng
        ports:
          http:
            port: 8080

    persistence:
      config:
        enabled: true
        type: configMap
        name: searxng-config
        advancedMounts:
          searxng:
            config-envsubst:
              - path: /config
      tmp:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /tmp
            subPath: tmp
          - path: /etc/searxng
            subPath: etc/searxng

    ingress:
      main:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-gabernetes.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
            /outpost.goauthentik.io/start
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
          nginx.ingress.kubernetes.io/satisfy: any
          nginx.ingress.kubernetes.io/whitelist-source-range: 192.168.1.0/24
        hosts:
          - host: ${app_url}
            paths:
              - path: /
                service:
                  identifier: searxng
                  port: http
        tls:
          - secretName: ${certificate_name}
            hosts:
              - ${app_url}
