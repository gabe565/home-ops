# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-vip
  namespace: kube-system
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
      kube-vip:
        type: daemonset
        containers:
          app:
            image:
              repository: ghcr.io/kube-vip/kube-vip
              tag: v0.9.0@sha256:b8ca3bf3d7d14cab890ca7696e721f718fa23c57bce9268aebc72de04617335f
              pullPolicy: IfNotPresent
            args:
              - manager
            env:
              vip_arp: "true"
              port: "6443"
              vip_interface: eno1
              vip_cidr: "32"
              cp_enable: "true"
              cp_namespace: kube-system
              vip_ddns: "false"
              svc_enable: "false"
              svc_leasename: plndr-svcs-lock
              vip_leaderelection: "true"
              vip_leasename: plndr-cp-lock
              vip_leaseduration: "5"
              vip_renewdeadline: "3"
              vip_retryperiod: "1"
              address: 192.168.1.230
              prometheus_server: :2112
            securityContext:
              capabilities:
                add:
                  - NET_ADMIN
                  - NET_RAW
            probes:
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
              liveness:
                enabled: true
              readiness:
                enabled: true
        pod:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: node-role.kubernetes.io/master
                        operator: Exists
                  - matchExpressions:
                      - key: node-role.kubernetes.io/control-plane
                        operator: Exists
          hostNetwork: true
          tolerations:
            - effect: NoSchedule
              operator: Exists
            - effect: NoExecute
              operator: Exists

    serviceAccount:
      create: true

    rbac:
      roles:
        kube-vip:
          enabled: true
          type: ClusterRole
          rules:
            - apiGroups: [""]
              resources: [services, services/status, endpoints]
              verbs: [list, get, watch, update]
            - apiGroups: [""]
              resources: [nodes]
              verbs: [list, get, watch, update, patch]
            - apiGroups: [coordination.k8s.io]
              resources: [leases]
              verbs: [list, get, watch, update, create]
      bindings:
        kube-vip:
          enabled: true
          type: ClusterRoleBinding
          roleRef:
            identifier: kube-vip
          subjects:
            - identifier: default

    service:
      metrics:
        nameOverride: metrics
        enabled: true
        controller: kube-vip
        ports:
          http:
            port: 2112

    serviceMonitor:
      main:
        enabled: true
        serviceName: kube-vip-metrics
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
