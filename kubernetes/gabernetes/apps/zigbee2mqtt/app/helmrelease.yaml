# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: zigbee2mqtt
  namespace: zigbee2mqtt
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
      zigbee2mqtt:
        annotations:
          secret.reloader.stakater.com/reload: internal-tls,mqtt-tls
        containers:
          app:
            image:
              repository: ghcr.io/koenkk/zigbee2mqtt
              tag: 2.6.2@sha256:ffabf256f4550175278fbeebdbc3f174f2ffa005175e755324c5f06020af3e68
              pullPolicy: IfNotPresent
            env:
              TZ: America/Chicago
              ZIGBEE2MQTT_DATA: /data
            resources:
              requests:
                squat.ai/zigbee: 1
              limits:
                squat.ai/zigbee: 1
            probes:
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
        pod:
          labels:
            policy.gabe565.com/egress-mosquitto: "true"
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-nginx: "true"
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            fsGroup: 65534
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: {type: RuntimeDefault}

    persistence:
      data:
        enabled: true
        accessMode: ReadWriteOnce
        size: 128Mi
      tls:
        type: secret
        name: internal-tls
      mqtt-tls:
        type: secret
        name: mqtt-tls

    service:
      zigbee2mqtt:
        controller: zigbee2mqtt
        ports:
          http:
            port: 8080

    ingress:
      zigbee2mqtt:
        enabled: true
        hosts:
          - host: ${app_url}
            paths:
              - path: /
                service:
                  identifier: zigbee2mqtt
                  port: http
        tls:
          - secretName: ${certificate_name}
            hosts:
              - ${app_url}
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-gabernetes.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://$host/outpost.goauthentik.io/start
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
