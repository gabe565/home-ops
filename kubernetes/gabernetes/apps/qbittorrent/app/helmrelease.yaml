# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.1.0/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: qbittorrent
spec:
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
      qbittorrent:
        annotations:
          secret.reloader.stakater.com/reload: qbittorrent-gluetun
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/qbittorrent
              tag: 4.6.4@sha256:b9af0f2173572a69d2c02eab8f701ef7b04f61689efe1c5338b96445d528dec4
              pullPolicy: IfNotPresent
            env:
              TZ: America/Chicago
            probes:
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              readOnlyRootFilesystem: true
          vpn:
            image:
              repository: qmcgaw/gluetun
              tag: v3.38.0@sha256:5522794f5cce6d84bc7f06b1e3a3b836ede9100c64aec94543cb503bb2ecb72f
              pullPolicy: IfNotPresent
            env:
              HEALTH_VPN_DURATION_INITIAL: 120s
              HEALTH_SUCCESS_WAIT_DURATION: 120s
              VPN_SERVICE_PROVIDER: custom
              VPN_TYPE: wireguard
              FIREWALL_INPUT_PORTS: "8080"
              DOT: "off"
              DNS_ADDRESS: 10.8.0.1
              WIREGUARD_MTU: "1390"
              VERSION_INFORMATION: "off"
            envFrom:
              - secretRef:
                  name: qbittorrent-gluetun
            securityContext:
              capabilities:
                add:
                  - NET_ADMIN
                  - SYS_MODULE
        pod:
          labels:
            policy.gabe565.com/ingress-authentik: "true"
            policy.gabe565.com/ingress-ingress: "true"
          securityContext:
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
      vuetorrent:
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/gabe565/vuetorrent
              tag: 2.7.3@sha256:e4fbc179b8ded25fae142dc9aa8a51928732c007008c647ca119011cab97ddcf
              pullPolicy: IfNotPresent
            securityContext:
              readOnlyRootFilesystem: true
        pod:
          labels:
            policy.gabe565.com/ingress-ingress: "true"

    persistence:
      config:
        enabled: true
        retain: true
        accessMode: ReadWriteOnce
        size: 1Gi
        advancedMounts:
          qbittorrent:
            app:
              - path: /config
      downloads:
        enabled: true
        type: nfs
        server: 192.168.1.240
        path: /volume1/media/Downloads
        advancedMounts:
          qbittorrent:
            app:
              - path: /downloads
      tmp:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /tmp
        advancedMounts:
          vuetorrent:
            app:
              - path: /var/cache/nginx
                subPath: nginx/cache
              - path: /var/run
                subPath: nginx/run

    service:
      qbittorrent:
        controller: qbittorrent
        ports:
          http:
            port: 8080
      vuetorrent:
        controller: vuetorrent
        ports:
          http:
            port: 80

    ingress:
      qbittorrent:
        enabled: true
        annotations: &annotations
          nginx.ingress.kubernetes.io/auth-url:
            http://ak-outpost-gabernetes.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: /outpost.goauthentik.io/start
          nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,Cookie
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
          nginx.ingress.kubernetes.io/configuration-snippet: proxy_set_header Referer '';
          nginx.ingress.kubernetes.io/proxy-body-size: 16M
        hosts:
          - host: ${app_url}
            paths:
              - path: /
                service:
                  identifier: qbittorrent
                  port: http
        tls:
          - secretName: ${certificate_name}
            hosts:
              - ${app_url}
      vuetorrent:
        enabled: true
        annotations:
          <<: *annotations
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Referer '';
            expires -1;
        hosts:
          - host: ${vuetorrent_url}
            paths:
              - path: /
                service:
                  identifier: vuetorrent
                  port: http
              - path: /api
                service:
                  identifier: qbittorrent
                  port: http
        tls: &vuetorrent-tls
          - secretName: ${certificate_name}
            hosts:
              - ${vuetorrent_url}
      vuetorrent-sw:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            add_header Content-Type application/javascript;
            return 200 "self.addEventListener('install', event => { event.waitUntil(self.skipWaiting()) })";
        hosts:
          - host: ${vuetorrent_url}
            paths:
              - path: /sw.js
                pathType: Exact
                service:
                  identifier: vuetorrent
                  port: http
        tls: *vuetorrent-tls
