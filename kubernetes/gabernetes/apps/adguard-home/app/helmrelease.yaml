# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: adguard-home
  namespace: adguard-home
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
      adguard-home:
        type: statefulset
        replicas: 2
        annotations:
          configmap.reloader.stakater.com/reload: unbound
        containers:
          app:
            image:
              repository: adguard/adguardhome
              tag: v0.107.59@sha256:5d5e3aef39a8c8906a324f0c2da0a6123929e459b57c1e3f05e401dca5c7bf02
              pullPolicy: IfNotPresent
            env:
              TZ: America/Chicago
            probes:
              liveness: &probe
                enabled: true
                type: HTTP
                port: 3000
                path: /login.html
              readiness: *probe
              startup:
                <<: *probe
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            securityContext:
              readOnlyRootFilesystem: true
              runAsUser: 65534
              runAsGroup: 65534
              allowPrivilegeEscalation: false
          unbound:
            image:
              repository: ghcr.io/gabe565/unbound-cache
              tag: beta
              pullPolicy: Always
            env:
              TZ: America/Chicago
            probes:
              liveness: &probe
                enabled: true
                type: TCP
                port: 5353
              readiness: *probe
              startup:
                <<: *probe
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
        pod:
          priorityClassName: system-cluster-critical
          labels:
            policy.gabe565.com/egress-namespace: "true"
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-ingress: "true"
            policy.gabe565.com/ingress-namespace: "true"
          securityContext:
            fsGroup: 65534
            fsGroupChangePolicy: OnRootMismatch
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  podAffinityTerm:
                    topologyKey: kubernetes.io/hostname
                    labelSelector:
                      matchLabels:
                        app.kubernetes.io/name: adguard-home
                        app.kubernetes.io/component: adguard-home
        statefulset:
          volumeClaimTemplates:
            - name: data
              storageClass: longhorn-ssd
              accessMode: ReadWriteOnce
              size: 2Gi
              advancedMounts:
                app:
                  - path: /opt/adguardhome/conf
                    subPath: conf
                  - path: /opt/adguardhome/work
                    subPath: work
                unbound:
                  - path: /opt/unbound/data
                    subPath: unbound
      sync:
        containers:
          app:
            image:
              repository: ghcr.io/bakito/adguardhome-sync
              tag: alpine-v0.7.2@sha256:7ee37b07a7230f564b2453834a59627e3ba23c114976334ea350e18ac9a639ec
              pullPolicy: IfNotPresent
            args: [run]
            env:
              ORIGIN_URL: http://adguard-home-origin:3000
              ORIGIN_WEB_URL: https://${app_url}
              ORIGIN_USERNAME: ${sync_username}
              ORIGIN_PASSWORD: ${sync_password}
              REPLICA_URL: http://adguard-home-replica:3000
              REPLICA_WEB_URL: https://replica.${app_url}
              REPLICA_USERNAME: ${sync_username}
              REPLICA_PASSWORD: ${sync_password}
              REPLICA_AUTO_SETUP: "true"
              CRON: "*/10 * * * *"
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities: {drop: [ALL]}
        pod:
          labels:
            policy.gabe565.com/egress-namespace: "true"
          securityContext:
            runAsNonRoot: true

    service:
      adguard-home:
        controller: adguard-home
        ports:
          http:
            port: 3000
      sync:
        controller: sync
        ports:
          http:
            port: 8080
      origin: &origin-http
        controller: adguard-home
        extraSelectorLabels:
          apps.kubernetes.io/pod-index: "0"
        ports:
          http:
            port: 3000
      origin-dns: &origin-dns
        controller: adguard-home
        extraSelectorLabels:
          apps.kubernetes.io/pod-index: "0"
        type: LoadBalancer
        externalTrafficPolicy: Local
        loadBalancerIP: 192.168.1.221
        ports:
          dns-tcp:
            port: 53
            protocol: TCP
          dns-udp:
            port: 53
            protocol: UDP

      replica:
        <<: *origin-http
        extraSelectorLabels:
          apps.kubernetes.io/pod-index: "1"
      replica-dns:
        <<: *origin-dns
        extraSelectorLabels:
          apps.kubernetes.io/pod-index: "1"
        loadBalancerIP: 192.168.1.222

    persistence:
      unbound:
        enabled: true
        type: configMap
        name: unbound
        advancedMounts:
          adguard-home:
            unbound:
              - path: /opt/unbound/etc/unbound/unbound.conf
                subPath: unbound.conf
      tmp:
        enabled: true
        type: emptyDir
        advancedMounts:
          adguard-home:
            unbound:
              - path: /opt/unbound/etc/unbound/dev
                subPath: dev
              - path: /opt/unbound/etc/unbound/var
                subPath: var

    ingress:
      origin: &ingress
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-gabernetes.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://$host/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,Authorization
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" href="${theme_park}/base/adguard/overseerr.css"></head>';
        hosts:
          - host: ${app_url}
            paths:
              - path: /
                service:
                  identifier: origin
                  port: http
        tls:
          - secretName: ${certificate_name}
            hosts:
              - ${app_url}
              - replica.${app_url}
      replica:
        <<: *ingress
        hosts:
          - host: replica.${app_url}
            paths:
              - path: /
                service:
                  identifier: replica
                  port: http
