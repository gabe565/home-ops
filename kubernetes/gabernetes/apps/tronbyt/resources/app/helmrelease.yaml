# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.4.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tronbyt
  namespace: tronbyt
spec:
  chart:
    spec:
      chart: app-template
      version: 4.2.0
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
      tronbyt:
        annotations:
          secret.reloader.stakater.com/reload: internal-tls,valkey
        containers:
          app:
            image:
              repository: ghcr.io/tronbyt/server
              tag: 1.5.2@sha256:6da2848a08a028e5adbae2d0ea25efc50f8eebe7b003a170571477579837a046
              pullPolicy: IfNotPresent
            command:
              - python3
              - run.py
              - --ssl-certfile=/tls/tls.crt
              - --ssl-keyfile=/tls/tls.key
              - --no-access-log
            env:
              TZ: America/Chicago
              PRODUCTION: "1"
              SERVER_PROTOCOL: https
              TRONBYT_PORT: "443"
              WEB_CONCURRENCY: "2"
              REDIS_PASSWORD:
                secretKeyRef:
                  name: valkey
                  key: valkey-password
              REDIS_URL:
                dependsOn: REDIS_PASSWORD
                value: redis://:$(REDIS_PASSWORD)@valkey:6379
              SYSTEM_APPS_REPO: https://github.com/gabe565/tronbyt-apps.git
            probes:
              liveness: &probe
                enabled: true
                type: HTTPS
                path: /health
                spec:
                  failureThreshold: 6
              readiness: *probe
              startup:
                <<: *probe
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: [ALL]}
        pod:
          terminationGracePeriodSeconds: 1
          labels:
            policy.gabe565.com/egress-home-assistant: "true"
            policy.gabe565.com/egress-namespace: "true"
            policy.gabe565.com/egress-nightscout: "true"
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-nginx: "true"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: {type: RuntimeDefault}

    service:
      tronbyt:
        controller: tronbyt
        ports:
          http:
            port: 443

    persistence:
      data:
        accessMode: ReadWriteOnce
        size: 4Gi
        retain: true
        globalMounts:
          - path: /app/data
            subPath: data
          - path: /app/users
            subPath: users
      tls:
        type: secret
        name: internal-tls
      ca-bundle:
        type: configMap
        name: ca-bundle
        globalMounts:
          - path: /etc/ssl/certs/ca-certificates.crt
            subPath: ca-certificates.crt
      tmp:
        type: emptyDir
        medium: Memory

    ingress:
      tronbyt:
        annotations: &annotations
          nginx.ingress.kubernetes.io/backend-protocol: HTTPS
          nginx.ingress.kubernetes.io/whitelist-source-range: "192.168.1.0/24,10.42.0.0/16"
        hosts:
          - host: ${app_host}
            paths:
              - path: /
                service: &service
                  identifier: tronbyt
                  port: http
        tls: &tls
          - secretName: ${certificate_name}
            hosts:
              - ${app_host}
      no-logs:
        annotations:
          <<: *annotations
          nginx.ingress.kubernetes.io/use-regex: "true"
          nginx.ingress.kubernetes.io/enable-access-log: "false"
        hosts:
          - host: ${app_host}
            paths:
              - path: /(.+)/currentapp
                service: *service
                pathType: ImplementationSpecific
              - path: /app_preview
                service: *service
        tls: *tls
