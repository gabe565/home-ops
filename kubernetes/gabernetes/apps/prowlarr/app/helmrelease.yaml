# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prowlarr
  namespace: prowlarr
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
      prowlarr:
        annotations:
          configmap.reloader.stakater.com/reload: ca-bundle
          secret.reloader.stakater.com/reload: internal-tls
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/prowlarr
              tag: 2.1.3.5208@sha256:236a73dad45baeedd1eba40a457de63a644695728a2ce28f0d254b1fe9a05822
              pullPolicy: IfNotPresent
            env:
              TZ: America/Chicago
            probes:
              liveness: &probe
                enabled: true
                type: HTTPS
                path: /ping
              readiness: *probe
              startup:
                <<: *probe
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: [ALL]}
        pod:
          labels:
            policy.gabe565.com/egress-qbittorrent: "true"
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-nginx: "true"
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            fsGroup: 65534
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: {type: RuntimeDefault}

    service:
      prowlarr:
        controller: prowlarr
        ports:
          http:
            port: 9696
          https:
            port: 6969
            primary: true

    persistence:
      config:
        enabled: true
        accessMode: ReadWriteOnce
        size: 2Gi
      tls:
        type: secret
        name: internal-tls
      ca-bundle:
        type: configMap
        name: ca-bundle
        globalMounts:
          - path: /etc/ssl/certs/ca-certificates.crt
            subPath: ca-certificates.crt
      tmp:
        type: emptyDir

    ingress:
      prowlarr:
        enabled: true
        hosts:
          - host: ${app_url}
            paths:
              - path: /
                service:
                  identifier: prowlarr
                  port: https
        tls:
          - secretName: ${certificate_name}
            hosts:
              - ${app_url}
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-gabernetes.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://$host/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,Authorization
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</body>' '<link rel="stylesheet" href="${theme_park}/base/prowlarr/overseerr.css"></body>';
