# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.4.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
  namespace: immich
spec:
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    defaultPodOptions:
      enableServiceLinks: false

    controllers:
      server:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.115.0@sha256:544fcfc41ce97833e33126e5041fb3b821e3db7bf405b54ac06689247a170a90
              pullPolicy: IfNotPresent
            env: &env
              TZ: America/Chicago
              IMMICH_WORKERS_INCLUDE: api
              DB_HOSTNAME: postgresql-rw
              DB_DATABASE_NAME: immich
              DB_USERNAME: immich
              DB_PASSWORD:
                secretKeyRef:
                  name: postgresql-app
                  key: password
              REDIS_HOSTNAME: redis-master
              REDIS_PASSWORD:
                secretKeyRef:
                  name: redis
                  key: redis-password
              MPLCONFIGDIR: /tmp/matplotlib
            securityContext:
              readOnlyRootFilesystem: true
        pod:
          terminationGracePeriodSeconds: 1
          labels:
            policy.gabe565.com/egress-namespace: "true"
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-ingress: "true"
            policy.gabe565.com/ingress-namespace: "true"
      microservices:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.115.0@sha256:544fcfc41ce97833e33126e5041fb3b821e3db7bf405b54ac06689247a170a90
              pullPolicy: IfNotPresent
            env:
              <<: *env
              IMMICH_WORKERS_INCLUDE: null
              IMMICH_WORKERS_EXCLUDE: api
            resources:
              requests:
                gpu.intel.com/i915: 1
              limits:
                gpu.intel.com/i915: 1
            securityContext:
              readOnlyRootFilesystem: true
        pod:
          terminationGracePeriodSeconds: 1
          labels:
            policy.gabe565.com/egress-namespace: "true"
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-namespace: "true"
      machine-learning:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.115.0@sha256:66f13f7fb1af555f9f1767c3dd5d404b7e5f486a272dc73af9e6480f541463dc
              pullPolicy: IfNotPresent
            securityContext:
              readOnlyRootFilesystem: true
        pod:
          labels:
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-namespace: "true"

    persistence:
      upload:
        enabled: true
        storageClass: nfs-client
        accessMode: ReadWriteMany
        size: 32Gi
        retain: true
        advancedMounts:
          server:
            app:
              - path: /usr/src/app/upload
          microservices:
            app:
              - path: /usr/src/app/upload
      model-cache:
        enabled: true
        storageClass: longhorn-ssd
        accessMode: ReadWriteOnce
        size: 8Gi
        retain: true
        advancedMounts:
          machine-learning:
            app:
              - path: /cache
      tmp:
        enabled: true
        type: emptyDir

    service:
      immich:
        controller: immich
        enabled: false
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003
      server:
        enabled: true
        controller: server
        ports:
          http:
            port: 3001

    ingress:
      immich:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
        hosts:
          - host: ${app_url}
            paths:
              - path: /
                service:
                  identifier: server
                  port: http
        tls:
          - secretName: ${certificate_name}
            hosts:
              - ${app_url}
