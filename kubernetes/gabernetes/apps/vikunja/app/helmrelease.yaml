# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vikunja
  namespace: vikunja
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
      vikunja:
        containers:
          app:
            image:
              repository: vikunja/vikunja
              tag: 0.24.6@sha256:ed1f3ed467fecec0b57e9de7bc6607f8bbcbb23ffced6a81f5dfefc794cdbe3b
              pullPolicy: IfNotPresent
            command: [./vikunja]
            env:
              VIKUNJA_SERVICE_FRONTENDURL: https://${app_url}/
              VIKUNJA_DEFAULTSETTINGS_TIMEZONE: America/Chicago

              VIKUNJA_DATABASE_TYPE: postgres
              VIKUNJA_DATABASE_HOST: postgresql-rw
              VIKUNJA_DATABASE_DATABASE: vikunja
              VIKUNJA_DATABASE_USER: vikunja
              VIKUNJA_DATABASE_PASSWORD:
                secretKeyRef:
                  name: postgresql-app
                  key: password

              VIKUNJA_KEYVALUE_TYPE: redis
              VIKUNJA_REDIS_ENABLED: "true"
              VIKUNJA_REDIS_HOST: valkey-primary:6379
              VIKUNJA_REDIS_PASSWORD:
                secretKeyRef:
                  name: valkey
                  key: valkey-password

              VIKUNJA_AUTH_LOCAL: "false"
            envFrom:
              - secretRef:
                  name: vikunja-env
            securityContext:
              readOnlyRootFilesystem: true
        pod:
          labels:
            policy.gabe565.com/egress-ingress: "true"
            policy.gabe565.com/egress-namespace: "true"
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-ingress: "true"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch

    service:
      vikunja:
        controller: vikunja
        ports:
          http:
            port: 3456

    persistence:
      files:
        enabled: true
        storageClass: longhorn-ssd
        accessMode: ReadWriteOnce
        size: 2Gi
        globalMounts:
          - path: /app/vikunja/files
      config:
        enabled: true
        type: secret
        name: vikunja-config
        globalMounts:
          - path: /etc/vikunja/config.yaml
            subPath: config.yaml

    ingress:
      vikunja:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: 20M
        hosts:
          - host: ${app_url}
            paths:
              - path: /
                service:
                  identifier: vikunja
                  port: http
        tls:
          - secretName: ${certificate_name}
            hosts:
              - ${app_url}

    secrets:
      env:
        stringData:
          VIKUNJA_SERVICE_JWTSECRET: ${jwt_secret}
      config:
        stringData:
          # language=yaml
          config.yaml: |
            auth:
              openid:
                enabled: true
                redirecturl: https://${app_url}/auth/openid/
                providers:
                  - name: Authentik
                    authurl: https://${oauth_host}/application/o/vikunja/
                    logouturl: https://${oauth_host}/application/o/vikunja/end-session/
                    clientid: ${oauth_client_id}
                    clientsecret: ${oauth_client_secret}
