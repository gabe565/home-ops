# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home-assistant
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
      home-assistant:
        annotations:
          secret.reloader.stakater.com/reload: internal-tls
        containers:
          app:
            image:
              repository: ghcr.io/home-assistant/home-assistant
              tag: 2025.10.2@sha256:5ae78cf2e6d8b53439cac50ed184ff1336cfbbb878fce16f75589e048fcdcdd9
              pullPolicy: IfNotPresent
            env:
              TZ: America/Chicago
              HTTP_SSL_CERT: /tls/tls.crt
              HTTP_SSL_KEY: /tls/tls.key
              DATABASE_URL:
                secretKeyRef:
                  name: postgresql-app
                  key: uri
            probes:
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              readOnlyRootFilesystem: true
        pod:
          annotations:
            k8s.v1.cni.cncf.io/networks: ipvlan
          labels:
            policy.gabe565.com/egress-mosquitto: "true"
            policy.gabe565.com/egress-namespace: "true"
            policy.gabe565.com/egress-nodes: "true"
            policy.gabe565.com/egress-tronbyt: "true"
            policy.gabe565.com/egress-world-with-lan: "true"
            policy.gabe565.com/ingress-nginx: "true"
            policy.gabe565.com/ingress-world: "true"
          affinity: &affinity
            podAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    topologyKey: kubernetes.io/hostname
                    labelSelector:
                      matchLabels:
                        app.kubernetes.io/name: home-assistant
      code:
        annotations:
          secret.reloader.stakater.com/reload: code-internal-tls
        containers:
          app:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.104.2@sha256:6edc8e2d2849749c1a1a5eff8e76563b96db407e68899c143473a6004d0a6b5a
              pullPolicy: IfNotPresent
            args:
              - --disable-telemetry
              - --disable-update-check
              - --auth=none
              - --user-data-dir=/config/.vscode
              - --cert=/tls/tls.crt
              - --cert-key=/tls/tls.key
              - /config
            resources:
              requests:
                cpu: 0m
                memory: 50Mi
              limits:
                cpu: 500m
                memory: 500Mi
            securityContext:
              readOnlyRootFilesystem: true
              runAsUser: 0
        pod:
          labels:
            policy.gabe565.com/ingress-nginx: "true"
          affinity: *affinity

    persistence:
      config:
        enabled: true
        retain: true
        storageClass: longhorn-ssd
        accessMode: ReadWriteOnce
        size: 2Gi
      home-assistant-tls:
        enabled: true
        type: secret
        name: internal-tls
        advancedMounts:
          home-assistant:
            app:
              - path: /tls
      code-tls:
        enabled: true
        type: secret
        name: code-internal-tls
        advancedMounts:
          code:
            app:
              - path: /tls
      ca-bundle:
        type: configMap
        name: ca-bundle
        globalMounts:
          - path: /etc/ssl/certs/ca-certificates.crt
            subPath: ca-certificates.crt
      tmp:
        enabled: true
        type: emptyDir
      cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /root/.cache
            subPath: root/.cache
          - path: /root/.local
            subPath: root/.local
          - path: /run
            subPath: run
      code-config:
        enabled: true
        type: emptyDir
        advancedMounts:
          code:
            app:
              - path: /root/.config

    service:
      home-assistant:
        controller: home-assistant
        primary: true
        ports:
          http:
            port: 8123
      code:
        controller: code
        ports:
          http:
            port: 8080

    ingress:
      home-assistant:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
        hosts:
          - host: ${app_url}
            paths:
              - path: /
                service:
                  identifier: home-assistant
                  port: http
        tls:
          - secretName: ${certificate_name}
            hosts:
              - ${app_url}
              - www.${app_url}
      redirect:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
          nginx.ingress.kubernetes.io/temporal-redirect: https://${app_url}
        hosts:
          - host: ${old_app_url}
            paths:
              - path: /
                pathType: Exact
                service:
                  identifier: home-assistant
                  port: http
        tls:
          - secretName: ${old_certificate_name}
            hosts:
              - ${old_app_url}
              - www.${old_app_url}
      code:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/whitelist-source-range: "192.168.1.0/24,10.42.0.0/16"
        hosts:
          - host: ${code_url}
            paths:
              - path: /
                service:
                  identifier: code
                  port: http
        tls:
          - secretName: ${certificate_name}
            hosts:
              - ${code_url}
