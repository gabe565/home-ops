# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.4.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vaultwarden
  namespace: vaultwarden
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
      vaultwarden:
        annotations:
          secret.reloader.stakater.com/reload: internal-tls
        strategy: Recreate
        containers:
          app:
            image:
              repository: ghcr.io/dani-garcia/vaultwarden
              tag: 1.34.3-alpine@sha256:d70118b9dafb8588ee2651ceb5df68db27dcbd8e18467722010644ba48d5d6d6

            env:
              TZ: America/Chicago
              DOMAIN: https://${app_url}
              ROCKET_PORT: "8080"
              ROCKET_TLS: '{certs="/tls/tls.crt",key="/tls/tls.key"}'
              ADMIN_TOKEN: ${admin_token}
              DATABASE_URL:
                secretKeyRef:
                  name: postgresql-app
                  key: uri
              LOGIN_RATELIMIT_MAX_BURST: "2"
              PUSH_ENABLED: "true"
              PUSH_INSTALLATION_ID: ${push_installation_id}
              PUSH_INSTALLATION_KEY: ${push_installation_key}
              ORG_ATTACHMENT_LIMIT: "1000000" # 1GB
              USER_ATTACHMENT_LIMIT: "1000000" # 1GB
              USER_SEND_LIMIT: "1000000" # 1GB

            probes:
              liveness: &probe
                enabled: true
                type: HTTPS
                path: /alive
              readiness: *probe
              startup:
                <<: *probe
                spec:
                  failureThreshold: 30
                  periodSeconds: 5

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: [ALL]}
        pod:
          priorityClassName: system-cluster-critical
          labels:
            policy.gabe565.com/egress-namespace: "true"
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-nginx: "true"
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            fsGroup: 65534
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: {type: RuntimeDefault}

    service:
      vaultwarden:
        controller: vaultwarden
        ports:
          http:
            port: 8080

    persistence:
      data:
        enabled: true
        retain: true
        accessMode: ReadWriteOnce
        storageClass: longhorn-ssd
        size: 8Gi
      tls:
        enabled: true
        type: secret
        name: internal-tls

    ingress:
      vaultwarden:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        hosts:
          - host: ${app_url}
            paths:
              - path: /
                service: &svc
                  identifier: vaultwarden
                  port: http
        tls: &tls
          - secretName: ${certificate_name}
            hosts:
              - ${app_url}
      admin:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-gabernetes.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://$host/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: ${app_url}
            paths:
              - path: /admin
                pathType: ImplementationSpecific
                service: *svc
        tls: *tls
