# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.1.2/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: bookstack
  namespace: bookstack
spec:
  chart:
    spec:
      chart: app-template
      version: 4.1.2
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
      main:
        strategy: RollingUpdate
        containers:
          bookstack:
            image:
              repository: ghcr.io/linuxserver/bookstack
              tag: version-v25.07@sha256:4c6b0f491dc6ffe6ed00bdcc734c24883d8bdd1c3ca4497f516c2a5ad2eb9360
              pullPolicy: IfNotPresent
            env:
              TZ: America/Chicago
              APP_URL: https://${app_url}
              APP_KEY: ${app_key}

              DB_HOST: mariadb
              DB_DATABASE: bookstack
              DB_USERNAME: bookstack
              DB_PASSWORD:
                secretKeyRef:
                  name: mariadb
                  key: mariadb-password

              STORAGE_TYPE: s3
              STORAGE_S3_KEY: ${s3_access_key}
              STORAGE_S3_SECRET: ${s3_secret_key}
              STORAGE_S3_BUCKET: bookstack
              STORAGE_S3_REGION: us-central-1
              STORAGE_S3_ENDPOINT: https://${s3_url}
              STORAGE_URL: https://bookstack.${s3_url}

              LOG_FAILED_LOGIN_MESSAGE: Failed login for %u
              AUTH_METHOD: saml2
              AUTH_AUTO_INITIATE: "true"
              SAML2_NAME: Authentik
              SAML2_EMAIL_ATTRIBUTE: email
              SAML2_EXTERNAL_ID_ATTRIBUTE: http://schemas.goauthentik.io/2021/02/saml/username
              SAML2_DISPLAY_NAME_ATTRIBUTES: Name
              SAML2_IDP_ENTITYID: https://${authentik_host}/api/v3/providers/saml/2/metadata/?download
              SAML2_AUTOLOAD_METADATA: "true"
            probes:
              liveness: &probe
                enabled: true
                type: HTTP
                path: /status
              readiness: *probe
              startup:
                <<: *probe
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
        pod:
          labels:
            policy.gabe565.com/egress-namespace: "true"
            policy.gabe565.com/egress-world: "true"
            policy.gabe565.com/ingress-nginx: "true"
          securityContext:
            seccompProfile: {type: RuntimeDefault}

    persistence:
      config:
        type: emptyDir
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
            subPath: tmp
          - path: /run
            subPath: run

    service:
      main:
        ports:
          http:
            port: 80

    ingress:
      main:
        hosts:
          - host: ${app_url}
            paths:
              - path: /
                service:
                  identifier: main
        tls:
          - secretName: ${certificate_name}
            hosts:
              - ${app_url}
