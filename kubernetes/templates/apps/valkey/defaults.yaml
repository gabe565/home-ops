apiVersion: v1
kind: ConfigMap
metadata:
  name: valkey-defaults
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
data:
  # language=yaml
  values.yaml: |
    controllers:
      valkey:
        type: statefulset
        containers:
          valkey:
            command: [/scripts/start.sh]
            env:
              VALKEY_PASSWORD_FILE: /secret/valkey-password
              VALKEY_PORT: 6379
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities: {drop: [ALL]}
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  exec:
                    command: [/scripts/liveness.sh]
              readiness:
                enabled: true
                custom: true
                spec:
                  exec:
                    command: [/scripts/readiness.sh]
              startup:
                enabled: true
                custom: true
                spec:
                  exec:
                    command: [/scripts/liveness.sh]
                  failureThreshold: 60
                  periodSeconds: 5
        pod:
          labels:
            policy.gabe565.com/ingress-namespace: "true"
          securityContext:
            runAsNonRoot: true
            runAsUser: 999
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: {type: RuntimeDefault}

    persistence:
      data:
      secret:
        type: secret
        identifier: valkey
      scripts:
        type: configMap
        identifier: scripts
        defaultMode: 0o550

    service:
      valkey:
        controller: valkey
        ports:
          valkey:
            port: 6379

    configMaps:
      scripts:
        data:
          # language=shell script
          start.sh: |
            #!/bin/sh
            [ -f $VALKEY_PASSWORD_FILE ] && export VALKEY_PASSWORD="$(cat "$VALKEY_PASSWORD_FILE")"
            exec valkey-server \
              --port "$VALKEY_PORT" \
              --requirepass "$VALKEY_PASSWORD" \
              --primaryauth "$VALKEY_PASSWORD" \
              --appendonly yes \
              "$@" $VALKEY_EXTRA_FLAGS
          # language=shell script
          ping.sh: |
            #!/bin/sh
            [ -f $VALKEY_PASSWORD_FILE ] && export VALKEY_PASSWORD="$(cat "$VALKEY_PASSWORD_FILE")"
            [ -n "$VALKEY_PASSWORD" ] && export REDISCLI_AUTH="$VALKEY_PASSWORD"
            exec valkey-cli -h localhost -p "$VALKEY_PORT" ping
          # language=shell script
          liveness.sh: |
            #!/bin/sh
            response="$(/scripts/ping.sh)"
            responseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')
            if [ "$response" != "PONG" ] && [ "$responseFirstWord" != "LOADING" ] && [ "$responseFirstWord" != "MASTERDOWN" ]; then
              echo "$response"
              exit 1
            fi
          # language=shell script
          readiness.sh: |
            #!/bin/sh
            response="$(/scripts/ping.sh)"
            if [ "$response" != "PONG" ]; then
              echo "$response"
              exit 1
            fi
